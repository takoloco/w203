# Chunk 2: q2_1
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
# Chunk 3: q3_1
#model1 <- lm()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: q2_1
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
# Chunk 3: q3_1
model1 <- lm(probarr ~ crime, data = Data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: q2_1
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
# Chunk 3: q3_1
model1 <- lm(probarr ~ crime, data = Data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: q2_1
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
setwd("~/Work/MIDS/w203/labs/lab4")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: q2_1
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
# Chunk 3: q3_1
model1 <- lm(probarr ~ crime, data = Data)
summary(model1)
model1 <- lm(probarr ~ density, data = Data)
summary(model1)
model1 <- lm(probarr ~ wagecon, data = Data)
summary(model1)
model1 <- lm(probarr ~ mix, data = Data)
summary(model1)
model1 <- lm(probarr ~ mix + ymale, data = Data)
summary(model1)
model1 <- lm(probarr ~ ymale, data = Data)
summary(model1)
model1 <- lm(probarr ~ pctmin, data = Data)
summary(model1)
model1 <- lm(probarr ~ pctmin/100, data = Data)
summary(model1)
model1 <- lm(probarr ~ pctmin/100 + tax, data = Data)
summary(model1)
model1 <- lm(probarr ~ pctmin/100 + tax, data = Data)
summary(model1)
model1 <- lm(probarr ~ pctmin/100 + tax, data = Data)
model1 <- lm(probarr ~ pctmin + tax, data = Data)
summary(model1)
model1 <- lm(probarr ~ pctmin + urban, data = Data)
summary(model1)
model1 <- lm(crime ~ pctmin + urban, data = Data)
summary(model1)
model1 <- lm(crime ~ pctmin, data = Data)
summary(model1)
model1 <- lm(crime ~ pctmin + central, data = Data)
summary(model1)
model1 <- lm(crime ~ pctmin + urban, data = Data)
summary(model1)
model1 <- lm(crime ~ pctmin + west, data = Data)
summary(model1)
model1 <- lm(probsen ~ probarr + probconv, data = Data)
summary(model1)
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
summary(model1)
model1 <- lm(probsen ~ probconv, data = Data)
summary(model1)
model1 <- lm(probsen ~ mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ mix + ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ mix + pctmin, data = Data)
summary(model1)
model1 <- lm(probsen ~ mix + urban, data = Data)
summary(model1)
model1 <- lm(probsen ~ mix + ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ mix + police, data = Data)
summary(model1)
model1 <- lm(probarr ~ mix + police, data = Data)
summary(model1)
model1 <- lm(probconv ~ mix + police, data = Data)
summary(model1)
model1 <- lm(probsen ~ probconv + mix + police, data = Data)
summary(model1)
model1 <- lm(probconv ~ police + mix, data = Data)
model1 <- lm(probconv ~ police + mix, data = Data)
model1 <- lm(probsen ~ police + mix, data = Data)
summary(model1)
model1 <- lm(probconv ~ police + mix, data = Data)
summary(model1)
model1 <- lm(probarr ~ police + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + mix + crime, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + urban, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + density, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + tax, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + west, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + central, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + pctmin, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagecon, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagetuc, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagetrd, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagefr, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wageser, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagemfg, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagefed, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wagesta, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + wageloc, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(police) + wageloc, data = Data)
model1 <- lm(probsen ~ log(police) + probconv, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(police), data = Data)
summary(model1)
model1 <- lm(probsen ~ police, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(police), data = Data)
summary(model1)
model1 <- lm(probconv ~ log(police), data = Data)
summary(model1)
model1 <- lm(probarr ~ log(police), data = Data)
summary(model1)
model1 <- lm(probarr ~ police, data = Data)
summary(model1)
model1 <- lm(probconv ~ police, data = Data)
summary(model1)
model1 <- lm(probsen ~ police, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + avgsen, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + mix + mix*ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + mix + ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + density + mix + ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + density + avgsen + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + density + urban + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + density + mix + urban*mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix + urban*mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix + central*mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix + central*density, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix + crimbe, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix + crime, data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(density) + mix + log(crime), data = Data)
summary(model1)
model1 <- lm(probsen ~ police + density + mix + log(crime), data = Data)
summary(model1)
model1 <- lm(probsen ~ police + log(crime) + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + avgsen + police + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + police + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + mix + log(tax), data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + mix + urban, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + mix + west, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + mix + central, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
Data$probsen_cleaned <- Data$probsen[Data$probsen <= 1]
model1 <- lm(probsen_cleaned ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
probsen_cleaned <- Data$probsen[Data$probsen <= 1]
model1 <- lm(probsen_cleaned ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
Data <- Data[Data$probsen <= 1]
Data$probsen[Data$probsen > 1]
Data$probsen[Data$probsen > 1] <- NA
Data$probsen[Data$probsen > 1]
model1 <- lm(probsen_cleaned ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: q2_1
Data <- read.csv('crime_v2_updated.csv')
summary(Data)
for(i in names(Data)){
hist(Data[[i]], main = i)
}
(length(Data$probarr[Data$probarr > 1]))
(length(Data$probconv[Data$probconv > 1]))
(length(Data$probsen[Data$probsen > 1]))
max(Data$police)
Data$county[Data$tax == max(Data$tax)]
Data$county[Data$police == 0.00905433]
Data$county[Data$wageser == max(Data$wageser)]
Data$tax[is.na(Data$tax)]
# Check for NAs
for(i in names(Data)){
val <- Data[[i]][is.na(Data[[i]])]
if(length(val)) {
sprintf("%s: %d NA row(s) found", i, length(val))
} else {
print(paste(i, ": 0 returned"))
}
}
# Chunk 3: q3_1
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
summary(model1)
model1 <- lm(probsen ~ log(crime) + probarr + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
model2 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model2)
model1 <- lm(probsen ~ pctmin + mix + ymale + pctmin*ymale, data = Data)
model2 <- lm(probsen ~ pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model2)
model3 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
model2 <- lm(probsen ~ pctmin + ymale + pctmin*ymale, data = Data)
summary(model2)
model3 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
model3_5 <- lm(probconv ~ mix)
model3_5 <- lm(probconv ~ mix, data = Data)
summary(model3_5)
summary(model2)
model3 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
model2 <- lm(probsen ~ pctmin + ymale, data = Data)
summary(model2)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police)
+ pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model1)
model1 <- lm(probsen ~ log(crime) + log(avgsen) + log(police)
+ pctmin + mix + ymale, data = Data)
summary(model1)
model3 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
summary(model3_5)
model3_5 <- lm(mix ~ probconv, data = Data)
summary(model3_5)
model3 <- lm(probsen ~ log(crime) + probarr + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
model3 <- lm(probsen ~ log(crime) + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
model3 <- lm(probsen ~ log(crime) + probarr + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
model3_5 <- lm(mix ~ probarr + probconv, data = Data)
summary(model3_5)
model3 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen) + log(police) + pctmin + mix + ymale + pctmin*ymale, data = Data)
summary(model3)
summary(model3_5)
summary(model3)
model4 <- lm(probsen ~ log(crime) + probarr + probconv + log(avgsen)
+ log(police) + log(density) + log(tax) + pctmin
+ mix + ymale + pctmin*ymale, data = Data)
summary(model4)
hist(Data$crime, main = "Crime")
length(val <- Data$crime[is.na(Data$crime)])
hist(Data$probarr, main = "Probarr")
hist(Data$crime, main = "Crime")
hist(Data$crime, main = "Crime")
hist(log(Data$crime), main = "Crime")
```{r q2_4, fig.align='center', fig.height=3, fig.width=3, fig.show='hold'}
hist(Data$probarr, main = "Probconv")
hist(Data$probconv, main = "Probconv")
hist(log(Data$probconv), main = "Log(Probconv)")
(length(Data$probconv[Data$probconv > 1]))
hist(Data$probsen, main = "'Probability' of prison sentence")
(length(Data$probsen[Data$probsen > 1]))
hist(Data$probsen, main = "Avg. sentence, days")
hist(Data$avgsen, main = "Avg. sentence, days")
hist(log(Data$avgsen), main = "Log(Avg. sentence, days)")
(length(Data$probsen[Data$probsen > 20]))
(length(Data$probsen[Data$avgsen > 20]))
hist(log(Data$avgsen), main = "Log(Avg. sentence, days)")
hist(Data$avgsen, main = "Avg. sentence, days")
hist(Data$avgsen, main = "Police per capita")
hist(Data$avgsen, main = "Police per capita")
hist(Data$police, main = "Police per capita")
hist(log(Data$police), main = "Log(Police per capita)")
hist(Data$police, main = "Police per capita")
(length(Data$probsen[Data$avgsen > 0.008]))
(length(Data$probsen[Data$police > 0.008]))
(length(Data$probsen[Data$police > 0.009]))
(length(Data$probsen[Data$police > 0.01]))
hist(Data$density, main = "People per sq. mile")
hist(log(Data$density, main = "Log(People per sq. mile)")
hist(log(Data$density, main = "Log(People per sq. mile)")
```
hist(Data$density, main = "People per sq. mile")
hist(log(Data$density, main = "Log(People per sq. mile)")
hist(Data$density, main = "People per sq. mile")
hist(Data$density, main = "People per sq. mile")
hist(log(Data$density, main = "Log(People per sq. mile)"))
hist(Data$density, main = "People per sq. mile")
hist(log(Data$density, main = "Log(People per sq. mile)"))
hist(log(Data$density), main = "Log(People per sq. mile)")
hist(Data$tax, main = "Tax revenue per capita")
hist(log(Data$tax), main = "Log(Tax revenue per capita)")
hist(Data$tax, main = "Tax revenue per capita")
hist(log(Data$tax), main = "Log(Tax revenue per capita)")
hist(Data$west, main = "=1 if in western part of the state")
hist(Data$west, main = "West")
hist(Data$central, main = "Central")
hist(Data$urban, main = "Urban")
hist(Data$central, main = "Central")
hist(Data$west, main = "West")
hist(Data$pctmin, main = "Proportion that is minority or nonwhite")
hist(Data$wagecon, main = "Weekly wage, construction")
hist(Data$wagetuc, main = "Weekly wage, transportation, utilities, communications")
hist(Data$wagetrd, main = "Weekly wage, wholesale, retail trade")
hist(Data$wagetrd, main = "Weekly wage, wholesale, retail trade")
hist(Data$wagetrd, main = "Weekly wage, wholesale, retail trade")
hist(Data$wagetrd, main = "Weekly wage, wholesale, retail trade")
hist(Data$wagefir, main = "Weekly wage, finance, insurance and real estate")
hist(Data$wageser, main = "Weekly wage, service industry")
max(Data$wageser)
hist(Data$wagemfg, main = "Weekly wage, manufacturing")
hist(Data$wagesta, main = "Weekly wage, state employees")
hist(Data$wageloc, main = "Weekly wage, local government employees")
hist(Data$mix, main = "Ratio of face to face/all other crimes")
hist(log(Data$mix), main = "Log(Ratio of face to face/all other crimes)")
hist(Data$mix, main = "Ratio of face to face/all other crimes")
hist(log(Data$tax), main = "Log(Tax revenue per capita)")
hist(log(Data$tax), main = "Log(Tax revenue per capita)")
hist(Data$tax, main = "Tax revenue per capita")
hist(log(Data$police), main = "Log(Police per capita)")
hist(Data$police, main = "Police per capita")
hist(Data$mix, main = "Ratio of face to face/all other crimes")
hist(log(Data$mix), main = "Log(Ratio of face to face/all other crimes)")
hist(log(Data$mix), main = "Log(Ratio of face to face/all other crimes)")
hist(Data$mix, main = "Ratio of face to face/all other crimes")
hist(Data$ymale, main = "Proportion of county males between the ages of 15 and 24")
hist(log(Data$ymale), main = "Log(Proportion of county males between the ages of 15 and 24)")
model1 <- lm(probsen ~ pctmin + ymale, data = Data)
summary(model1)
